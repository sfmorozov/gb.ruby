1. sqlite> SELECT
   	...> id,
   	...> flow_number,
   	...> SUBSTR(started_at, 7, 4) AS year,
   	...> SUBSTR(started_at, 4, 2) AS month,
   	...> SUBSTR(started_at, 1, 2) AS day
	...> FROM streams;

id  	flow_number  		year  	month  day
--  	-----------  		----  	-----  	---
1   	165          		2020 	08     	18 
2   	178          		2020  	10     	02 
3   	203          		2020  	11     	12 
4   	210          		2020  	12     	03 

2. UPDATE streams SET started_at = SUBSTR(started_at, 7, 4) || '-' || SUBSTR(started_at, 4, 2) || '-' || SUBSTR(started_at, 1, 2);
sqlite> SELECT * FROM streams;

id  course_id  flow_number  started_at  students_amount
--  ---------  -----------  ----------  ---------------
1   3          165          2020-08-18  34             
2   2          178          2020-10-02  37             
3   1          203          2020-11-12  35             
4   1          210          2020-12-03  41          

sqlite> SELECT 
   ...> id,
   ...> flow_number,
   ...> MAX(started_at)
   ...> FROM streams;
   
id  flow_number  MAX(started_at)
--  -----------  ---------------
4   210          2020-12-03 

3. SELECT 
   ...> DISTINCT(SUBSTR(started_at, 1, 4)) as uniq_year
   ...> FROM streams;

uniq_year
---------
2020

4. SELECT 
   ...> COUNT (*) AS total_teachers
   ...> FROM teachers;

total_teachers
--------------
3             

5. SELECT 
   ...> id,
   ...> started_at
   ...> FROM streams
   ...> WHERE id BETWEEN (SELECT MAX(id) - 1 FROM streams)
   ...> AND (SELECT MAX(id) FROM streams);
   
id  started_at
--  ----------
3   2020-11-12
4   2020-12-03


6. SELECT
   ...> AVG(performance)
   ...> FROM academic_performance
   ...> WHERE teacher_id = 1;

AVG(performance)
----------------
4.85     

7. SELECT
   ...> teacher_id,
   ...> AVG(performance)
   ...> FROM academic_performance
   ...> GROUP BY teacher_id
   ...> HAVING AVG(performance)  < 4.8;

teacher_id  AVG(performance)
----------  ----------------
3           4.7     

